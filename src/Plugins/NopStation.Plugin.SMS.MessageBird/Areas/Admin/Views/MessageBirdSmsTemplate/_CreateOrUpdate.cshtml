@model SmsTemplateModel
@inject AdminAreaSettings adminAreaSettings
@using Nop.Core.Domain.Common

<div asp-validation-summary="All"></div>
<input asp-for="Id" type="hidden" />

<section class="content">
    <div class="container-fluid">
        <div class="form-horizontal">
            <div class="cards-group">
                <div class="card card-default">
                    <div class="card-body">
                        <div class="form-group row">
                            <div class="col-md-3">
                                <nop-label asp-for="AllowedTokens" />
                            </div>
                            <div class="col-md-9">
                                <a id="allowedTokensShowHide" href="javascript:toggleLoadedAllowedTokens();">@T("Admin.Common.Show")</a>
                                <div id="pnlAllowedTokens" style="display: none; white-space: pre-line">
                                    <div class="form-text-row">@Model.AllowedTokens</div>
                                </div>
                            </div>
                            <script>
                        function toggleLoadedAllowedTokens() {
                            $('#pnlAllowedTokens').toggle();
                            if ($('#pnlAllowedTokens').css('display') == 'none') {
                                $('#allowedTokensShowHide').text('@T("Admin.Common.Show")');
                            } else {
                                $('#allowedTokensShowHide').text('@T("Admin.Common.Hide")');
                            }
                        }
                            </script>
                        </div>
                        <div class="form-group row">
                            <div class="col-md-3">
                                <nop-label asp-for="Name" />
                            </div>
                            <div class="col-md-9">
                                <div class="form-text-row">@Model.Name</div>
                            </div>
                        </div>

                        @(await Html.LocalizedEditorAsync<SmsTemplateModel, SmsTemplateLocalizedModel>("SmsTemplate-localized",
                                @<div>
                                    <div class="form-group row">
                                        <div class="col-md-3">
                                            <nop-label asp-for="@Model.Locales[item].Body" />
                                        </div>
                                        <div class="col-md-9">
                                            <nop-textarea asp-for="@Model.Locales[item].Body" />
                                            <script>
                                                $(document).ready(function() {
                                                    $('#@Html.IdFor(model => model.Locales[item].Body)')
                                                        .height($('#@Html.IdFor(model => model.Body)')[0].scrollHeight);
                                                });
                                            </script>
                                            <span asp-validation-for="@Model.Locales[item].Body"></span>
                                        </div>
                                    </div>
                                    <input type="hidden" asp-for="@Model.Locales[item].LanguageId" />
                                </div>
                                                    ,
                                                    @<div>
                                                        <div class="form-group row">
                                                            <div class="col-md-3">
                                                                <nop-label asp-for="Body" />
                                                            </div>
                                                            <div class="col-md-9">
                                                                <nop-textarea asp-for="Body" asp-required="true" />
                                                                <script>
                                                                    $(document).ready(function() {
                                                                        $('#@Html.IdFor(model => model.Body)')
                                                                            .height($('#@Html.IdFor(model => model.Body)')[0].scrollHeight);
                                                                    });
                                                                </script>
                                                                <span asp-validation-for="Body"></span>
                                                            </div>
                                                        </div>
                                                    </div>
                                                          ))

                        <div class="form-group row">
                            <div class="col-md-3">
                                <nop-label asp-for="Active" />
                            </div>
                            <div class="col-md-9">
                                <nop-editor asp-for="Active" />
                                <span asp-validation-for="Active"></span>
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-md-3">
                                <nop-label asp-for="SelectedCustomerRoleIds" />
                            </div>
                            <div class="col-md-9">
                                <div class="row">
                                    <div class="col-md-4">
                                        <nop-select asp-for="SelectedCustomerRoleIds" asp-items="Model.AvailableCustomerRoles" asp-multiple="true" />
                                        <script>
						            $(document).ready(function() {
							            var rolesIdsInput = $('#@Html.IdFor(model => model.SelectedCustomerRoleIds)')
								            .data("kendoMultiSelect");
							            rolesIdsInput.setOptions({
								            autoClose: false,
								            filter: "contains"
							            });

							            @if (Model.AvailableCustomerRoles.Count == 0)
				                        {
					                        <text>
						                        rolesIdsInput.setOptions({
							                        enable: false,
							                        placeholder: 'No customer roles available'
						                        });
						                        rolesIdsInput._placeholder();
						                        rolesIdsInput._enable();
					                        </text>
				                        }
						            });
                                        </script>
                                    </div>
                                    <div class="col-md-8">
                                        @await Component.InvokeAsync("AclDisabledWarning")
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-md-3">
                                <nop-label asp-for="SelectedStoreIds" />
                            </div>
                            <div class="col-md-9">
                                <div class="row">
                                    <div class="col-md-4">
                                        <nop-select asp-for="SelectedStoreIds" asp-items="Model.AvailableStores" asp-multiple="true" />
                                        <script>
                                        $(document).ready(function() {
                                            var storesIdsInput = $('#@Html.IdFor(model => model.SelectedStoreIds)').data("kendoMultiSelect");
                                            storesIdsInput.setOptions({
                                                autoClose: false,
                                                filter: "contains"
                                            });

                                            @if (Model.AvailableStores.Count == 0)
                                            {
                                                <text>
                                                    storesIdsInput.setOptions({
                                                        enable: false,
                                                        placeholder: 'No stores available'
                                                    });
                                                    storesIdsInput._placeholder();
                                                    storesIdsInput._enable();
                                                </text>
                                            }
                                        });
                                        </script>
                                    </div>
                                    <div class="col-md-8">
                                        @await Component.InvokeAsync("MultistoreDisabledWarning")
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>