@model BadgeModel

@if (Model.Id > 0)
{
    <div class="card-body">
        @await Html.PartialAsync("Table", new DataTablesModel
        {
            Name = "products-grid",
            UrlRead = new DataUrl("ProductList", "ProductBadge", new RouteValueDictionary { [nameof(Model.BadgeProductSearchModel.BadgeId)] = Model.BadgeProductSearchModel.BadgeId }),
            UrlDelete = new DataUrl("ProductDelete", "ProductBadge", new RouteValueDictionary { [nameof(Model.BadgeProductSearchModel.BadgeId)] = Model.BadgeProductSearchModel.BadgeId }),
            Length = Model.BadgeProductSearchModel.PageSize,
            LengthMenu = Model.BadgeProductSearchModel.AvailablePageSizes,
            ColumnCollection = new List<ColumnProperty>
            {
                new ColumnProperty(nameof(BadgeProductModel.ProductName))
                {
                    Title = T("Admin.NopStation.ProductBadge.Badges.Products.Product").Text
                },
                new ColumnProperty(nameof(BadgeProductModel.ProductId))
                {
                    Title = T("Admin.Common.View").Text,
                    Width = "150",
                    ClassName =  NopColumnClassDefaults.Button,
                    Render = new RenderButtonView(new DataUrl("~/Admin/Product/Edit/"))
                },
                new ColumnProperty(nameof(BadgeCategoryModel.Published))
                {
                    Title = T("Admin.NopStation.ProductBadge.Badges.Products.Published").Text,
                    Width = "100",
                    ClassName =  NopColumnClassDefaults.CenterAll,
                    Render = new RenderBoolean()
                },
                new ColumnProperty(nameof(BadgeProductModel.ProductId))
                {
                    Title = T("Admin.Common.Delete").Text,
                    Width = "150",
                    Render = new RenderButtonRemove(T("Admin.Common.Delete").Text),
                    ClassName =  NopColumnClassDefaults.Button
                }
            }
        })
    </div>
    <div class="card-footer">
        <button type="submit" id="btnAddNewProduct" onclick="javascript:OpenWindow('@(Url.Action("ProductAddPopup", "ProductBadge", new { badgeId = Model.Id, btnId = "btnRefreshProducts", formId = "badge-form" }))', 800, 800, true); return false;" class="btn btn-primary">
            @T("Admin.NopStation.ProductBadge.Badges.Products.AddNew")
        </button>
        <button type="submit" id="btnRefreshProducts" style="display: none"></button>
        <script>
            $(document).ready(function () {
                $('#btnRefreshProducts').click(function () {
                    //refresh grid
                    updateTable('#products-grid');
                    //return false to don't reload a page
                    return false;
                });
            });
        </script>
    </div>
}
else
{
    <div class="card-body">
        @T("Admin.NopStation.ProductBadge.Badges.Products.SaveBeforeEdit")
    </div>
}