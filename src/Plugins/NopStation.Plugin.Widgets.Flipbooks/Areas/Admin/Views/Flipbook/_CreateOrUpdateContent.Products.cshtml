@model FlipbookContentModel
@using Nop.Web.Framework.Models.DataTables
@using Microsoft.AspNetCore.Routing

@if (Model.Id > 0)
{
    <div class="card-body">
        @await Html.PartialAsync("Table", new DataTablesModel
        {
            Name = "flipbookcontent-products-grid",
            UrlRead = new DataUrl("GetContentProducts", "Flipbook", new RouteValueDictionary { [nameof(FlipbookContentProductSearchModel.FlipbookContentId)] = Model.FlipbookContentProductSearchModel.FlipbookContentId }),
            UrlDelete = new DataUrl("ContentProductDelete", "Flipbook", null),
            UrlUpdate = new DataUrl("ContentProductEdit", "Flipbook", null),
            Length = Model.FlipbookContentProductSearchModel.PageSize,
            LengthMenu = Model.FlipbookContentProductSearchModel.AvailablePageSizes,
            ColumnCollection = new List<ColumnProperty>
            {
                new ColumnProperty(nameof(FlipbookContentProductModel.ProductName))
                {
                    Title = T("Admin.NopStation.Flipbooks.FlipbookContentProducts.Fields.Product").Text,
                    Width = "300"
                },
                new ColumnProperty(nameof(FlipbookContentProductModel.ProductId))
                {
                    Title = T("Admin.Common.View").Text,
                    Width = "150",
                    ClassName =  NopColumnClassDefaults.Button,
                    Render = new RenderButtonView(new DataUrl("~/Admin/Product/Edit/"))
                },
                new ColumnProperty(nameof(FlipbookContentProductModel.DisplayOrder))
                {
                    Title = T("Admin.NopStation.Flipbooks.FlipbookContentProducts.Fields.DisplayOrder").Text,
                    Width = "100",
                    Editable = true,
                    EditType = EditType.Number
                },
                new ColumnProperty(nameof(FlipbookContentProductModel.Id))
                {
                    Title = T("Admin.Common.Edit").Text,
                    Width = "200",
                    ClassName =  NopColumnClassDefaults.Button,
                    Render = new RenderButtonsInlineEdit()
                },
                new ColumnProperty(nameof(FlipbookContentProductModel.Id))
                {
                    Title = T("Admin.Common.Delete").Text,
                    Width = "150",
                    Render = new RenderButtonRemove(T("Admin.Common.Delete").Text),
                    ClassName =  NopColumnClassDefaults.Button
                }
            }
        })
    </div>
    <div class="card-footer">
        <div width="100%">
            <button type="submit" id="btnAddNewProduct"
                    onclick="javascript:OpenWindow('@(Url.Action("ProductAddPopup", "Flipbook", new { flipbookContentId = Model.Id, btnId = "btnRefresh", formId = "flipbookcontents-form" }))', 800, 450, true); return false;"
                    class="btn btn-primary">
                @T("Admin.NopStation.Flipbooks.FlipbookContentProducts.AddNew")
            </button>
            <button type="submit" id="btnRefresh" style="display: none"></button>
            <script>
                $(document).ready(function () {
                    $('#btnRefresh').click(function () {
                        //refresh grid
                        updateTable('#flipbookcontent-products-grid');

                        //return false to don't reload a page
                        return false;
                    });
                });
            </script>
        </div>
    </div>
}
else
{
    <div class="card-body">
        @T("Admin.NopStation.Flipbooks.FlipbookContents.Products.SaveBeforeEdit")
    </div>
}