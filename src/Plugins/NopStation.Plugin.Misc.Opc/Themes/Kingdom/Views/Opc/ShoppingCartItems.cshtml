@model ShoppingCartModel

@using Nop.Core
@using Nop.Core.Domain.Catalog
@using Nop.Core.Domain.Orders
@using Nop.Core.Domain.Tax
@using Nop.Web.Framework.Mvc.Routing
@using System.Text

@inject OrderSettings orderSettings
@inject IWorkContext workContext
@inject IWebHelper webHelper

<div class="table-wrapper">
    <table class="cart jsmartable">
        <thead>
            <tr>
                <th class="info">
                    @T("NopStation.Theme.Kingdom.carttable.info")
                </th>
                @if (Model.ShowProductImages)
                {
                    <th class="product-picture">
                        @T("ShoppingCart.Image")
                    </th>
                }
                <th data-breakpoint="md" class="product">
                    @T("ShoppingCart.Product(s)")
                </th>
                <th class="quantity">
                    @T("ShoppingCart.Quantity")
                </th>

                <th>
                    @T("ShoppingCart.ItemTotal")
                </th>
                <th data-breakpoint="md" class="remove-from-cart">
                    @T("ShoppingCart.Remove")
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Items)
            {
                <tr>
                    <td class="info">
                    </td>
                    @if (Model.ShowProductImages)
                    {
                        <td class="product-picture">
                            <a href="@(Url.RouteUrl<Product>(new {SeName = item.ProductSeName }))"><img alt="@item.Picture.AlternateText" src="@item.Picture.ImageUrl" title="@item.Picture.Title" /></a>
                        </td>
                    }
                    <td class="product">
                        <a href="@(Url.RouteUrl<Product>(new {SeName = item.ProductSeName }))" class="product-name">@item.ProductName</a>

                        @if (Model.ShowSku)
                        {
                            <div>
                                <span class="sku">
                                    @T("ShoppingCart.SKU") :
                                </span>

                                <span class="sku">
                                    <span class="sku-number">@item.Sku</span>
                                </span>
                            </div>
                        }
                        <div>

                            <span class="unit-price">
                                @T("ShoppingCart.UnitPrice") :
                            </span>

                            <span class="unit-price">
                                @*<label class="td-title">@T("ShoppingCart.UnitPrice"):</label>*@
                                <span class="product-unit-price">@item.UnitPrice</span>
                            </span>
                        </div>
                        @if (!string.IsNullOrEmpty(item.AttributeInfo))
                        {
                            <div class="attributes">
                                @Html.Raw(item.AttributeInfo)
                            </div>
                        }
                        @if (!string.IsNullOrEmpty(item.RecurringInfo))
                        {
                            <div class="recurring-info">
                                @Html.Raw(item.RecurringInfo)
                            </div>
                        }
                        @if (!string.IsNullOrEmpty(item.RentalInfo))
                        {
                            <div class="rental-info">
                                @Html.Raw(item.RentalInfo)
                            </div>
                        }
                        @*@if (Model.IsEditable && item.AllowItemEditing)
                    {
                    var editCartItemUrl = Url.RouteUrl("Product", new { SeName = item.ProductSeName }, webHelper.CurrentRequestProtocol);
                    editCartItemUrl = webHelper.ModifyQueryString(editCartItemUrl, "updatecartitemid", item.Id.ToString());
                    <div class="edit-item">
                    <a href="@editCartItemUrl">@T("Common.Edit")</a>
                    </div>
                    }*@
                        @if (item.Warnings.Count > 0)
                        {
                            <div class="message-error">
                                <ul>
                                    @foreach (var warning in item.Warnings)
                                    {
                                        <li>@Html.Raw(warning)</li>
                                    }
                                </ul>
                            </div>
                        }

                        @if (Model.ShowVendorName)
                        {
                            <div>
                                <span class="vendor">
                                    @T("ShoppingCart.VendorName")
                                </span>
                                <span class="vendor">
                                    <label class="td-title">@T("ShoppingCart.VendorName"):</label>
                                    <span class="vendor-name">@item.VendorName</span>
                                </span>
                            </div>
                        }

                        @if (Model.IsEditable)
                        {
                            <div class="remove-from-cart">
                                @if (item.DisableRemoval)
                                {
                                    <text>&nbsp;</text>
                                }
                                else
                                {
                                    <div class="d-inline-flex pt-1 pr-3 delete-item">
                                        <a class="clr-dark" onclick="ShoppingCart.DeleteCartItem(@item.Id)">Remove</a>
                                    </div>
                                }
                            </div>
                        }
                    </td>
                    <td class="quantity">
                        <label class="td-title" for="itemquantity@(item.Id)">@T("ShoppingCart.Quantity"):</label>
                        @if (Model.IsEditable)
                        {
                            if (item.AllowedQuantities.Count > 0)
                            {

                                <select name="itemquantity@(item.Id)" id="itemquantity@(item.Id)" class="qty-dropdown" onchange="ShoppingCart.cartQuantityChangeDropdown(this.value, @(item.Id))">
                                    @foreach (var qty in item.AllowedQuantities)
                                    {
                                        <option selected="@qty.Selected" value="@qty.Value">@qty.Value</option>
                                    }
                                </select>
                            }
                            else
                            {
                                @*<input name="itemquantity@(item.Id)" id="itemquantity@(item.Id)" type="number" value="@(item.Quantity)" class="qty-input" />*@
                                <div class="cart-quantity">

                                    <button class="qty-button decrement btn-disabled" type="button" onclick="ShoppingCart.cartQuantityChange(@item.Id, false, @Model.IsEditable.ToString().ToLower())">
                                        <i class="icon icon-minus"></i>
                                    </button>

                                    <input name="itemquantity@(item.Id)" id="itemquantity@(item.Id)" type="text" value="@(item.Quantity)" class="qty-input" />

                                    <button class="qty-button increament" type="button" onclick="ShoppingCart.cartQuantityChange(@item.Id, true, @Model.IsEditable.ToString().ToLower())">
                                        <i class="icon icon-plus"></i>
                                    </button>
                                </div>
                            }
                        }
                        else
                        {
                            <span class="product-quantity">@item.Quantity</span>
                        }
                    </td>
                    <td class="subtotal">
                        <label class="td-title">@T("ShoppingCart.ItemTotal"):</label>
                        <span class="product-subtotal">@item.SubTotal</span>
                        @if (!string.IsNullOrEmpty(item.Discount))
                        {
                            <div class="discount">
                                @T("ShoppingCart.ItemYouSave", item.Discount)
                            </div>
                            if (item.MaximumDiscountedQty.HasValue)
                            {
                                <div class="discount-additional-info">
                                    @T("ShoppingCart.MaximumDiscountedQty", item.MaximumDiscountedQty.Value)
                                </div>
                            }
                        }
                    </td>
                    
                    <td class="remove-from-cart">
                        @if (item.DisableRemoval)
                        {
                            <text>&nbsp;</text>
                        }
                        else
                        {
                            <button type="button" name="updatecart" class="remove-btn" onclick="ShoppingCart.DeleteCartItem(@item.Id)"></button>
                        }
                    </td>

                </tr>
            }
        </tbody>
    </table>
</div>

<script asp-location="Footer">
    $(document).ready(function () {
        $(".jsmartable").jsmartable();
    })
</script>