@model FormAttributeModel

@if (Model.Id > 0)
{
    <div class="card-body">
        <p>
            @T("Admin.NopStation.Plugin.Misc.QuoteCart.FormAttributes.PredefinedValues.Hint")
        </p>
        @await Html.PartialAsync("Table", new DataTablesModel
        {
            Name = "formattributevalues-grid",
            UrlRead = new DataUrl("PredefinedFormAttributeValueList", "FormAttribute", new RouteValueDictionary { [nameof(Model.PredefinedFormAttributeValueSearchModel.FormAttributeId)] = Model.PredefinedFormAttributeValueSearchModel.FormAttributeId }),
            UrlDelete = new DataUrl("PredefinedFormAttributeValueDelete", "FormAttribute", null),
            Length = Model.PredefinedFormAttributeValueSearchModel.PageSize,
            LengthMenu = Model.PredefinedFormAttributeValueSearchModel.AvailablePageSizes,
            ColumnCollection =
            [
                new ColumnProperty(nameof(PredefinedFormAttributeValueModel.Name))
                {
                    Title = T("Admin.NopStation.Plugin.Misc.QuoteCart.FormAttributes.PredefinedValues.Fields.Name").Text,
                    Width = "200"
                },
                new ColumnProperty(nameof(PredefinedFormAttributeValueModel.IsPreSelected))
                {
                    Title = T("Admin.NopStation.Plugin.Misc.QuoteCart.FormAttributes.PredefinedValues.Fields.IsPreSelected").Text,
                    Width = "100",
                    ClassName = NopColumnClassDefaults.CenterAll,
                    Render = new RenderBoolean()
                },
                new ColumnProperty(nameof(PredefinedFormAttributeValueModel.DisplayOrder))
                {
                    Title = T("Admin.NopStation.Plugin.Misc.QuoteCart.FormAttributes.PredefinedValues.Fields.DisplayOrder").Text,
                    Width = "100",
                    ClassName = NopColumnClassDefaults.CenterAll
                },
                new ColumnProperty(nameof(PredefinedFormAttributeValueModel.Id))
                {
                    Title = T("Admin.Common.Edit").Text,
                    Width = "100",
                    ClassName =  NopColumnClassDefaults.Button,
                    Render = new RenderCustom("renderColumnEdit")
                },
                new ColumnProperty(nameof(PredefinedFormAttributeValueModel.Id))
                {
                    Title = T("Admin.Common.Delete").Text,
                    Width = "100",
                    Render = new RenderButtonRemove(T("Admin.Common.Delete").Text),
                    ClassName =  NopColumnClassDefaults.Button
                }
            ]
        })
    
        <script>
            function renderColumnEdit(data, type, row, meta) {
                return '<button onclick=\"javascript:OpenWindow(\'@Url.Content("~/Admin/FormAttribute/PredefinedFormAttributeValueEditPopup/")' + data + '?btnId=btnRefresh&formId=formattribute-form\', 800, 750, true); return false;\" class="btn btn-default"><i class="fas fa-pencil-alt"></i>@T("Admin.Common.Edit").Text</button>';
            }
        </script>
    </div>
    <div class="card-footer">
        <button type="submit" id="btnAddNewValue" onclick="javascript:OpenWindow('@(Url.Action("PredefinedFormAttributeValueCreatePopup", "FormAttribute", new { formAttributeId = Model.Id, btnId = "btnRefresh", formId = "formattribute-form" }))', 800, 550, true); return false;" class="btn btn-primary">
            @T("Admin.NopStation.Plugin.Misc.QuoteCart.FormAttributes.PredefinedValues.AddNew")
        </button>
        <button type="submit" id="btnRefresh" style="display: none"></button>
        <script>
            $(function () {
                $('#btnRefresh').click(function () {
                    //refresh grid
                    updateTable('#formattributevalues-grid');

                    //return false to don't reload a page
                    return false;
                });
            });
        </script>
    </div>
}
else
{
    <div class="card-body">
        @T("Admin.NopStation.Plugin.Misc.QuoteCart.FormAttributes.PredefinedValues.SaveBeforeEdit")
    </div>
}
