@model CategorySearchModel

@{
    //page title
    ViewBag.PageTitle = T("Admin.NopStation.AffiliateStation.CatalogCommissions.CategoryList").Text;
    //active menu item (system name)
    NopHtml.SetActiveMenuItemSystemName("CategoryCommissions.List");
}

@{
    const string hideSearchBlockAttributeName = "CategoryPage.HideSearchBlock";
    var hideSearchBlock = await genericAttributeService.GetAttributeAsync<bool>(await workContext.GetCurrentCustomerAsync(), hideSearchBlockAttributeName);
}

<nop-antiforgery-token />
<div class="content-header clearfix">
    <h1 class="pull-left">
        @T("Admin.NopStation.AffiliateStation.CatalogCommissions.CategoryList")
    </h1>
</div>

<section class="content">
    <div class="container-fluid">
        <div class="form-horizontal">
            <div class="cards-group">
                <div class="card card-default card-search">
                    <div class="card-body">
                        <div class="row search-row @(!hideSearchBlock ? "opened" : "")" data-hideAttribute="@hideSearchBlockAttributeName">
                            <div class="search-text">@T("Admin.Common.Search")</div>
                            <div class="icon-search"><i class="fa fa-search" aria-hidden="true"></i></div>
                            <div class="icon-collapse"><i class="fa fa-angle-down" aria-hidden="true"></i></div>
                        </div>

                        <div class="search-body @(hideSearchBlock ? "closed" : "")">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group row">
                                        <div class="col-md-4">
                                            <nop-label asp-for="SearchCategoryName" />
                                        </div>
                                        <div class="col-md-8">
                                            <nop-editor asp-for="SearchCategoryName" />
                                        </div>
                                    </div>
                                    <div class="form-group row" @(Model.HideStoresList ? Html.Raw("style=\"display:none\"") : null)>
                                        <div class="col-md-4">
                                            <nop-label asp-for="SearchStoreId" />
                                        </div>
                                        <div class="col-md-8">
                                            <nop-select asp-for="SearchStoreId" asp-items="@Model.AvailableStores" />
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <div class="text-center col-12">
                                            <button type="button" id="search-catalogcommission-categories" class="btn btn-primary btn-search"><i class="fa fa-search"></i>@T("Admin.Common.Search")</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="card card-default">
                    <div class="card-body">
                        @await Html.PartialAsync("Table", new DataTablesModel
                        {
                            Name = "catalogcommission-categories-grid",
                            UrlRead = new DataUrl("GetCategoryList", "CatalogCommission", null),
                            SearchButtonId = "search-catalogcommission-categories",
                            Length = Model.PageSize,
                            LengthMenu = Model.AvailablePageSizes,
                            Filters = new List<FilterParameter>
                            {
                                new FilterParameter(nameof(Model.SearchCategoryName)),
                                new FilterParameter(nameof(Model.SearchStoreId))
                            },
                            ColumnCollection = new List<ColumnProperty>
                            {
                                new ColumnProperty(nameof(CatalogCommissionModel.Name))
                                {
                                    Title = T("Admin.NopStation.AffiliateStation.CatalogCommissions.Fields.Name").Text,
                                    Width = "300"
                                },
                                new ColumnProperty(nameof(CatalogCommissionModel.EntityId))
                                {
                                    Title = T("Admin.Common.View").Text,
                                    Width = "100",
                                    ClassName =  NopColumnClassDefaults.Button,
                                    Render = new RenderButtonView(new DataUrl("~/Admin/Category/Edit"))
                                },
                                new ColumnProperty(nameof(CatalogCommissionModel.Commission))
                                {
                                    Title = T("Admin.NopStation.AffiliateStation.CatalogCommissions.Fields.Commission").Text,
                                    Render = new RenderCustom("renderCommission"),
                                    ClassName = NopColumnClassDefaults.CenterAll,
                                    Width = "100"
                                },
                                new ColumnProperty(nameof(CatalogCommissionModel.EntityId))
                                {
                                    Title = T("Admin.Common.Edit").Text,
                                    Width = "100",
                                    ClassName =  NopColumnClassDefaults.Button,
                                    Render = new RenderButtonEdit(new DataUrl("~/Admin/CatalogCommission/Edit?entityName=Category&entityId=", true))
                                }
                            }
                        })
                    </div>
                
                    <script>
                        function renderCommission(data, type, row, meta) {
                            if (row.Commission == '' || row.Commission == null)
                                return '<span class="label label-warning">Not set</span>';
                            return row.Commission;
                        }
                    </script>
                </div>
            </div>
        </div>
    </div>
</section>