@model SmartCarouselModel

<div class="card-body">
    @if (Model.Id > 0)
    {
        <div class="sub-panel">
            @await Html.PartialAsync("Table", new DataTablesModel
            {
                Name = "carouselproducts-grid",
                UrlRead = new DataUrl("ProductList", "SmartCarousel", new RouteValueDictionary { [nameof(Model.CarouselProductSearchModel.CarouselId)] = Model.CarouselProductSearchModel.CarouselId }),
                UrlUpdate = new DataUrl("ProductUpdate", "SmartCarousel", new RouteValueDictionary { [nameof(Model.CarouselProductSearchModel.CarouselId)] = Model.CarouselProductSearchModel.CarouselId }),
                UrlDelete = new DataUrl("ProductDelete", "SmartCarousel", new RouteValueDictionary { [nameof(Model.CarouselProductSearchModel.CarouselId)] = Model.CarouselProductSearchModel.CarouselId }),
                Length = Model.CarouselProductSearchModel.PageSize,
                LengthMenu = Model.CarouselProductSearchModel.AvailablePageSizes,
                ColumnCollection = new List<ColumnProperty>
                {
                    new ColumnProperty(nameof(SmartCarouselProductModel.PictureUrl))
                    {
                        Title = T("Admin.NopStation.SmartCarousels.Carousels.Products.Fields.Picture").Text,
                        Width = "120",
                        Render = new RenderPicture(),
                        ClassName = NopColumnClassDefaults.CenterAll
                    },
                    new ColumnProperty(nameof(SmartCarouselProductModel.ProductName))
                    {
                        Title = T("Admin.NopStation.SmartCarousels.Carousels.Products.Fields.Product").Text,
                        Width = "350",
                    },
                    new ColumnProperty(nameof(SmartCarouselProductModel.ProductId))
                    {
                        Title = T("Admin.Common.View").Text,
                        Width = "150",
                        ClassName =  NopColumnClassDefaults.Button,
                        Render = new RenderButtonView(new DataUrl("~/Admin/Product/Edit/"))
                    },
                    new ColumnProperty(nameof(SmartCarouselProductModel.DisplayOrder))
                    {
                        Title = T("Admin.NopStation.SmartCarousels.Carousels.Products.Fields.DisplayOrder").Text,
                        Width = "150",
                        Editable = true,
                        EditType = EditType.Number,
                        ClassName = NopColumnClassDefaults.CenterAll
                    },
                    new ColumnProperty(nameof(SmartCarouselProductModel.Id))
                    {
                        Title = T("Admin.Common.Edit").Text,
                        Width = "100",
                        ClassName =  NopColumnClassDefaults.Button,
                        Render = new RenderButtonsInlineEdit()
                    },
                    new ColumnProperty(nameof(SmartCarouselProductModel.Id))
                    {
                        Title = T("Admin.Common.Delete").Text,
                        Width = "100",
                        Render = new RenderButtonRemove(T("Admin.Common.Delete").Text),
                        ClassName =  NopColumnClassDefaults.Button
                    }
                }
            })
        </div>
        <div class="card-footer">
            <button type="submit" id="btnAddNewProduct" onclick="javascript:OpenWindow('@(Url.Action("ProductAddPopup", "SmartCarousel", new { CarouselId = Model.Id, btnId = "btnRefreshCarouselsProducts", formId = "carousel-form" }))', 800, 800, true); return false;" class="btn btn-primary">
                @T("Admin.NopStation.SmartCarousels.Carousels.Products.AddNew")
            </button>
            <input type="submit" id="btnRefreshCarouselsProducts" style="display: none" />
            <script>
                $(document).ready(function () {
                    $('#btnRefreshCarouselsProducts').click(function () {
                        //refresh grid
                        updateTable('#carouselproducts-grid');
                        //return false to don't reload a page
                        return false;
                    });
                });
            </script>
        </div>
    }
    else
    {
        <div class="card card-default">
            <div class="card-body">
                @T("Admin.NopStation.SmartCarousels.Carousels.Products.SaveBeforeEdit")
            </div>
        </div>
    }
</div>
