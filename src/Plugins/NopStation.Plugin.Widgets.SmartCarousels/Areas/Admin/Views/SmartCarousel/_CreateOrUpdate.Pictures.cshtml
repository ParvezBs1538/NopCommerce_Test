@model SmartCarouselModel

<div class="card-body">
    @if (Model.Id > 0)
    {
        <div class="sub-panel">
            @await Html.PartialAsync("Table", new DataTablesModel
            {
                Name = "carouselpictures-grid",
                UrlRead = new DataUrl("PictureList", "SmartCarousel", new RouteValueDictionary { [nameof(Model.CarouselPictureSearchModel.CarouselId)] = Model.CarouselPictureSearchModel.CarouselId }),
                UrlDelete = new DataUrl("PictureDelete", "SmartCarousel", new RouteValueDictionary { [nameof(Model.CarouselPictureSearchModel.CarouselId)] = Model.CarouselPictureSearchModel.CarouselId }),
                Length = Model.CarouselPictureSearchModel.PageSize,
                LengthMenu = Model.CarouselPictureSearchModel.AvailablePageSizes,
                ColumnCollection = new List<ColumnProperty>
                {
                    new ColumnProperty(nameof(SmartCarouselPictureModel.PictureUrl))
                    {
                        Title = T("Admin.NopStation.SmartCarousels.Carousels.Pictures.Fields.Picture").Text,
                        Width = "120",
                        Render = new RenderPicture(),
                        ClassName = NopColumnClassDefaults.CenterAll
                    },
                    new ColumnProperty(nameof(SmartCarouselPictureModel.DisplayOrder))
                    {
                        Title = T("Admin.NopStation.SmartCarousels.Carousels.Pictures.Fields.DisplayOrder").Text,
                        Width = "150",
                        Editable = true,
                        EditType = EditType.Number,
                        ClassName = NopColumnClassDefaults.CenterAll
                    },
                    new ColumnProperty(nameof(SmartCarouselPictureModel.Id))
                    {
                        Title = T("Admin.Common.Edit").Text,
                        Width = "100",
                        ClassName =  NopColumnClassDefaults.Button,
                        Render = new RenderCustom("renderCarouselPicturesColumnEdit")
                    },
                    new ColumnProperty(nameof(SmartCarouselPictureModel.Id))
                    {
                        Title = T("Admin.Common.Delete").Text,
                        Width = "100",
                        Render = new RenderButtonRemove(T("Admin.Common.Delete").Text),
                        ClassName =  NopColumnClassDefaults.Button
                    }
                }
            })
    
            <script>
                function renderCarouselPicturesColumnEdit(data, type, row, meta) {
                    return '<button onclick=\"javascript:OpenWindow(\'@Url.Content("~/Admin/SmartCarousel/PictureEditPopup/")' + data + '?btnId=btnRefreshCarouselPictures&formId=carousel-form\', 800, 750, true); return false;\" class="btn btn-default"><i class="fas fa-pencil-alt"></i>@T("Admin.Common.Edit").Text</button>';
                }
            </script>
        </div>
        <div class="card-footer">
            <button type="submit" id="btnAddNewCarouselPictures" onclick="javascript:OpenWindow('@(Url.Action("PictureAddPopup", "SmartCarousel", new { carouselId = Model.Id, btnId = "btnRefreshCarouselPictures", formId = "carousel-form" }))', 800, 750, true);return false;" class="btn btn-primary">
                @T("Admin.NopStation.SmartCarousels.Carousels.Pictures.AddNew")
            </button>
            <button type="submit" id="btnRefreshCarouselPictures" style="display: none"></button>
            <script>
                $(document).ready(function () {
                    $('#btnRefreshCarouselPictures').click(function () {
                        //refresh grid
                        updateTable('#carouselpictures-grid');

                        //return false to don't reload a page
                        return false;
                    });
                });
            </script>
        </div>
    }
    else
    {
        <div class="card card-default">
            <div class="card-body">
                @T("Admin.NopStation.SmartCarousels.Carousels.Pictures.SaveBeforeEdit")
            </div>
        </div>
    }
</div>
